When would you want to use a remote repository rather than keeping all your work
local?

    You would want to use a remote repository when you are working from multiple workstations or when you
    collaborate with a team.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You wouldn't want to automatically pull changes to your local repository because you could be in the 
	middle of fixing a bug or adding a feature, only to have that file be overwritten with an old file 
	from the remote repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forking is when you clone from one repository to another on GitHub. Cloning is when you copy all of 
	the files/commits from a repository, whether on GitHub or locally to a local directory. i.e. from GitHub
	to local OR local to local. Branches are separate paths from the master path that usually have bug fixes
	or new features added that don't change the master branch.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    The benefit of having a copy of the last known state of the remote stored locally is that you can work
	offline, without an internet connection.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    There are other version control applications out there but if you couldn't use them, then collaborating
	would be a lot harder.  I would imagine that you would have to work very, very closely with the team on
	a project via telephone or video teleconference to keep everyone updated on what files were being edited
	by whomever was assigned.  If multiple people were working on the same file, they would have to work
	closely to identify the modified parts and decide which to keep or discard.  Also, a cloud service or email 
	would have to be used to do the file sharing, which would become difficult.  In other words, it would be
	immensely harder without Git or GitHub.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    You would want to make changes to a separate branch when collaborating with others on a project through GitHub.
	This would allow flexibility for all members of the project to work on their own branch locally while updating
	their local master with the GitHub branch and then merging locally and pushing the branch to the remote and
	doing a pull request to merge with the other braches or master branch that everyone else is working on.  This allows
	for easier merging of code on the same files and keeping everything up-to-date.
